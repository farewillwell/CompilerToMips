declare i32 @getint()
declare void @putch(i32)
declare void @putint(i32)
declare void @putstr(i8*)

@str_0 = constant [2 x i8] c"
\00"
define dso_local i32 @main() {
b0:
  pcopy %V53 <- 5
  pcopy %V49 <- 4
  pcopy %V47 <- 3
  pcopy %V45 <- 10
  br label %b1
b1:
  %V7 = icmp ne i32 %V45, 0
  br i1 %V7, label %b2, label %b4
b2:
  %V9 = sub i32 %V45, 1
  %V12 = icmp sge i32 %V47, %V9
  br i1 %V12, label %b5, label %b18
b5:
  %V15 = add i32 %V9, 1
  %V16 = sdiv i32 %V47, %V15
  %V18 = add i32 %V16, %V9
  pcopy %V46 <- %V18
  br label %b6
b6:
  %V21 = icmp sle i32 %V49, %V9
  br i1 %V21, label %b7, label %b8
b7:
  %V24 = mul i32 %V49, %V9
  pcopy %V48 <- %V24
  br label %b9
b8:
  %V27 = add i32 %V9, 3
  %V28 = srem i32 %V49, %V27
  pcopy %V48 <- %V28
  br label %b9
b9:
  pcopy %V51 <- %V53
  br label %b10
b10:
  %V31 = icmp slt i32 %V51, %V48
  br i1 %V31, label %b11, label %b19
b11:
  %V34 = add i32 %V51, %V9
  %V37 = icmp eq i32 %V34, 2
  br i1 %V37, label %b14, label %b15
b14:
  pcopy %V50 <- %V34
  br label %b13
b15:
  %V40 = icmp ne i32 %V34, %V46
  br i1 %V40, label %b16, label %b17
b16:
  %V43 = add i32 %V46, %V34
  pcopy %V52 <- %V43
  br label %b12
b17:
  pcopy %V52 <- %V34
  br label %b12
b12:
  pcopy %V51 <- %V52
  br label %b10
b13:
  br label %b3
b3:
  pcopy %V53 <- %V50
  pcopy %V49 <- %V48
  pcopy %V47 <- %V46
  pcopy %V45 <- %V9
  br label %b1
b4:
  call void @putint(i32 %V53)
  call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str_0, i32 0, i32 0))
  ret i32 0
b18:
  pcopy %V46 <- %V47
  br label %b6
b19:
  pcopy %V50 <- %V51
  br label %b13
}

replace %V18with%V46
