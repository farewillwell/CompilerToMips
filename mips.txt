.data
str_0: .asciiz "\n"

.text

# enter main
jal main


# leave main
j END

getDif3N:
getDif3Nb0:

# move %V39, 0
li $t0, 0
move $t3, $t0

# move %V30, 1
li $t0, 1
move $t4, $t0

# br label %b1
j getDif3Nb1

getDif3Nb1:

# %V6 = icmp sle i32 %V30, 3
li $t1, 3
sle $t5, $t4, $t1

# br i1 %V6, label %b2, label %b4
bne $t5, $zero, getDif3Nb2
beq $t5, $zero, getDif3Nb4
getDif3Nb2:

# move %V38, %V39
# same reg $t3

# move %V34, %V35
move $t5, $t3

# move %V32, 1
li $t0, 1
move $t6, $t0

# br label %b5
j getDif3Nb5

getDif3Nb5:

# %V8 = icmp sle i32 %V32, 3
li $t1, 3
sle $t7, $t6, $t1

# br i1 %V8, label %b6, label %b3
bne $t7, $zero, getDif3Nb6
beq $t7, $zero, getDif3Nb3
getDif3Nb6:

# move %V37, %V38
# same reg $t3

# move %V33, 1
li $t0, 1
move $t5, $t0

# br label %b9
j getDif3Nb9

getDif3Nb9:

# %V10 = icmp sle i32 %V33, 3
li $t1, 3
sle $t7, $t5, $t1

# br i1 %V10, label %b10, label %b7
bne $t7, $zero, getDif3Nb10
beq $t7, $zero, getDif3Nb7
getDif3Nb10:

# %V13 = icmp ne i32 %V30, %V32
sne $t7, $t4, $t6

# br i1 %V13, label %b15, label %b17
bne $t7, $zero, getDif3Nb15
beq $t7, $zero, getDif3Nb17
getDif3Nb15:

# %V16 = icmp ne i32 %V30, %V33
sne $t7, $t4, $t5

# br i1 %V16, label %b16, label %b18
bne $t7, $zero, getDif3Nb16
beq $t7, $zero, getDif3Nb18
getDif3Nb16:

# %V19 = icmp ne i32 %V32, %V33
sne $t7, $t6, $t5

# br i1 %V19, label %b13, label %b19
bne $t7, $zero, getDif3Nb13
beq $t7, $zero, getDif3Nb19
getDif3Nb13:

# %V21 = add i32 %V37, 1
li $t1, 1
addu $t3, $t3, $t1

# call void @putint(i32 %V21)
move $a0, $t3
li $v0, 1
syscall

# call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str_0, i32 0, i32 0))
la $a0, str_0
li $v0, 4
syscall

# move %V36, %V21
# same reg $t3

# br label %b11
j getDif3Nb11

getDif3Nb11:

# %V24 = add i32 %V33, 1
li $t1, 1
addu $t7, $t5, $t1

# move %V37, %V36
# same reg $t3

# move %V33, %V24
move $t5, $t7

# br label %b9
j getDif3Nb9

getDif3Nb7:

# %V26 = add i32 %V32, 1
li $t1, 1
addu $t7, $t6, $t1

# move %V38, %V37
# same reg $t3

# move %V34, %V33
# same reg $t5

# move %V32, %V26
move $t6, $t7

# br label %b5
j getDif3Nb5

getDif3Nb3:

# %V28 = add i32 %V30, 1
li $t1, 1
addu $t7, $t4, $t1

# move %V39, %V38
# same reg $t3

# move %V35, %V34
move $t3, $t5

# move %V31, %V32
move $t5, $t6

# move %V30, %V28
move $t4, $t7

# br label %b1
j getDif3Nb1

getDif3Nb4:

# ret i32 %V39
move $v0, $t3
jr $ra

getDif3Nb17:

# move %V36, %V37
# same reg $t3

# br label %b11
j getDif3Nb11

getDif3Nb18:

# move %V36, %V37
# same reg $t3

# br label %b11
j getDif3Nb11

getDif3Nb19:

# move %V36, %V37
# same reg $t3

# br label %b11
j getDif3Nb11

main:
mainb0:

# %V1 = call i32 @F_getDif3N ()
sw $ra, -8($sp)
addi $sp, $sp, -8
jal getDif3N

addi $sp, $sp, 8
lw $ra, -8($sp)
move $t3, $v0

# call void @putint(i32 %V1)
move $a0, $t3
li $v0, 1
syscall

# ret i32 0
li $v0, 0
jr $ra

END:
li $v0, 10
syscall

