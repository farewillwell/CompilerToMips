declare i32 @getint()
declare void @putch(i32)
declare void @putint(i32)

define dso_local i32 @F_fib (i32 %P_0){
b0:
  %V1 = alloca i32
  store i32 %P_0 , i32* %V1
  %V2 = load i32, i32* %V1
  %V3 = icmp eq i32 %V2, 1
  br i1 %V3, label %b1, label %b2
b1:
  ret i32 1
  br label %b2
b2:
  %V4 = load i32, i32* %V1
  %V5 = icmp eq i32 %V4, 2
  br i1 %V5, label %b3, label %b4
b3:
  ret i32 2
  br label %b4
b4:
  %V6 = load i32, i32* %V1
  %V7 = sub  i32 %V6, 1
  %V8 = call i32 @F_fib (i32 %V7)
  %V9 = load i32, i32* %V1
  %V10 = sub  i32 %V9, 2
  %V11 = call i32 @F_fib (i32 %V10)
  %V12 = add  i32 %V8, %V11
  ret i32 %V12
}
define dso_local i32 @main() {
b0:
  %V1 = alloca i32
  store i32 2 , i32* %V1
  %V2 = alloca i32
  store i32 5 , i32* %V2
  %V3 = call i32 @getint()
  store i32 %V3 , i32* %V1
  %V4 = call i32 @getint()
  store i32 %V4 , i32* %V2
  %V5 = alloca [2 x i32]
  %V6 = getelementptr inbounds [2 x i32], [2 x i32]* %V5,  i32 0 ,i32 0
  store i32 1 , i32* %V6
  %V7 = getelementptr inbounds [2 x i32], [2 x i32]* %V5,  i32 0 ,i32 1
  store i32 2 , i32* %V7
  %V8 = load i32, i32* %V1
  %V9 = load i32, i32* %V2
  %V10 = mul  i32 %V8, %V9
  %V11 = sub  i32 0, %V10
  %V12 = call i32 @F_fib (i32 4)
  %V13 = mul  i32 %V11, %V12
  %V14 = add  i32 %V13, 0
  %V15 = call i32 @F_fib (i32 1)
  %V16 = getelementptr inbounds [2 x i32], [2 x i32]* %V5,  i32 0 ,i32 %V15
  %V17 = load i32, i32* %V16
  %V18 = mul  i32 %V17, 1
  %V19 = add  i32 %V14, %V18
  %V20 = sdiv  i32 1, 2
  %V21 = sub  i32 %V19, %V20
  %V22 = mul  i32 %V21, 5
  store i32 %V22 , i32* %V1
  %V23 = mul  i32 7, 5923
  %V24 = sdiv  i32 %V23, 56
  %V25 = mul  i32 %V24, 56
  %V26 = call i32 @F_fib (i32 6)
  %V27 = call i32 @F_fib (i32 %V26)
  %V28 = sub  i32 %V25, %V27
  %V29 = add  i32 1, 2
  %V30 = sdiv  i32 89, 2
  %V31 = mul  i32 %V30, 36
  %V32 = sub  i32 %V31, 53
  %V33 = sdiv  i32 %V32, 1
  %V34 = mul  i32 %V33, 6
  %V35 = sub  i32 %V29, %V34
  %V36 = mul  i32 45, 56
  %V37 = sdiv  i32 %V36, 85
  %V38 = sub  i32 %V37, 56
  %V39 = mul  i32 35, 56
  %V40 = sdiv  i32 %V39, 4
  %V41 = add  i32 %V38, %V40
  %V42 = sub  i32 %V41, 9
  %V43 = mul  i32 2, %V42
  %V44 = sub  i32 %V35, %V43
  %V45 = add  i32 %V28, %V44
  store i32 %V45 , i32* %V2
  %V46 = alloca i32
  %V47 = sub  i32 0, 5
  store i32 %V47 , i32* %V46
  %V48 = load i32, i32* %V1
  %V49 = load i32, i32* %V2
  %V50 = load i32, i32* %V46
  call void @putch(i32 34)
  call void @putint(i32 %V48)
  call void @putch(i32 44)
  call void @putch(i32 32)
  call void @putint(i32 %V49)
  call void @putch(i32 44)
  call void @putch(i32 32)
  call void @putint(i32 %V50)
  call void @putch(i32 92)
  call void @putch(i32 110)
  call void @putch(i32 34)
  ret i32 0
}

