declare i32 @getint()
declare void @putch(i32)
declare void @putint(i32)
declare void @putstr(i8*)

@str_0 = constant [10 x i8] c"21371295
\00"
define dso_local i32 @main() {
b0:
  call void @putstr(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str_0, i32 0, i32 0))
  %V1 = alloca i32
  store i32 0 , i32* %V1
  %V2 = load i32, i32* %V1
  %V3 = icmp sgt i32 %V2, 0
  br i1 %V3, label %b1, label %b2
b1:
  store i32 1 , i32* %V1
  br label %b3
b2:
  store i32 0 , i32* %V1
  br label %b3
b3:
  %V4 = alloca i32
  store i32 1 , i32* %V4
  %V5 = alloca i32
  store i32 2 , i32* %V5
  %V6 = load i32, i32* %V4
  %V7 = icmp sge i32 %V6, 0
  br i1 %V7, label %b4, label %b5
b4:
  store i32 1 , i32* %V4
  br label %b5
b5:
  %V8 = load i32, i32* %V4
  %V9 = icmp sge i32 %V8, 0
  br i1 %V9, label %b6, label %b7
b6:
  br label %b7
b7:
  %V10 = load i32, i32* %V4
  %V11 = icmp eq i32 %V10, 0
  br i1 %V11, label %b8, label %b9
b8:
  br label %b10
b9:
  br label %b10
b10:
  %V12 = load i32, i32* %V5
  %V13 = icmp sle i32 %V12, 0
  br i1 %V13, label %b11, label %b12
b11:
  store i32 2 , i32* %V5
  br label %b12
b12:
  %V14 = load i32, i32* %V4
  %V15 = load i32, i32* %V5
  %V16 = icmp eq i32 %V14, %V15
  br i1 %V16, label %b13, label %b14
b13:
  store i32 1 , i32* %V1
  br label %b14
b14:
  %V17 = load i32, i32* %V4
  %V18 = load i32, i32* %V5
  %V19 = icmp ne i32 %V17, %V18
  br i1 %V19, label %b15, label %b16
b15:
  store i32 0 , i32* %V1
  br label %b16
b16:
  %V20 = load i32, i32* %V4
  %V21 = load i32, i32* %V5
  %V22 = icmp ne i32 %V20, %V21
  br i1 %V22, label %b19, label %b18
b19:
  %V23 = load i32, i32* %V4
  %V24 = icmp sgt i32 %V23, 0
  br i1 %V24, label %b17, label %b18
b17:
  store i32 1 , i32* %V1
  br label %b18
b18:
  %V25 = load i32, i32* %V4
  %V26 = load i32, i32* %V5
  %V27 = icmp ne i32 %V25, %V26
  br i1 %V27, label %b20, label %b22
b22:
  %V28 = load i32, i32* %V4
  %V29 = icmp sgt i32 %V28, 0
  br i1 %V29, label %b20, label %b21
b20:
  store i32 2 , i32* %V1
  br label %b21
b21:
  %V30 = load i32, i32* %V4
  %V31 = add i32 %V30, 1
  %V32 = sub i32 %V31, 0
  store i32 %V32 , i32* %V4
  store i32 2 , i32* %V4
  store i32 -1 , i32* %V4
  ret i32 0
}

